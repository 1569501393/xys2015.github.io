===================================
第5天 周5 20180713 授课老师-李泳谊
作者: 邢永胜
===================================

1. picpick截图软件使用
设置语言，设置自动保存，取代截图音效，勾选总是复制图像到剪贴版，
可以设置截图的快捷键，按PrtScn可以直接截取全屏。

(14:30 - 14:58)

2. 第4天回顾
mkdir ls cd pwd touch vim echo cat
重定向符号: > >> 2> 2>> 2>&1

学习Linux就像刷墙，一遍一遍刷。就是练习，练多了就熟了。

刚开始记住一句话: 抓重点。

抓重点小笑话: 洗浴重心，着火，跑之，捂脸。

(14:58 - 15:04)

3. 基础命令

mv 移动目录或文件

利用mv实现更改文件名
    mv oldboy.txt oldgirl.txt

利用cp命令实现文件的备份(原地复制)
    cp oldboy.txt oldboy.txt.bak
    
rm 命令是Linux中最危险的命令
    rm -f file1      (强制删除，无覆盖提示)
    rm -rf /tmp/data (删除目录)
    
find - 查找文件或目录
    语法: find 在哪里找 -类型f -名字 "oldboy.txt"
    
    -type  f文件  d目录

    -name "filename" 要查找的完整文件名
    
    [root@oldboy1 data]# find /root/ -type f -name "oldboy.txt"
    /root/rename_test/oldboy.txt
    /root/oldboy.txt
    
    # 找出以*开头的所有.txt文件
    # * 通配符 代表所有字符 任意字符
    [root@oldboy1 data]# find /root/ -type f -name "*.txt"
    /root/alex.txt
    /root/data/oldgirl.txt
    /root/rename_test/oldboy.txt
    /root/oldboy.txt
    /root/hello2/hello.txt
    /root/hello/hello.txt
    /root/lidao.txt
    [root@oldboy1 data]#
    
    find 要与 | xargs 配合使用，之后会说管道与|管道的区别
    xargs 属于未解锁技能
    blog.51cto.com/lidao/1927347
    
    
管道符号 | 
    把前一个命令的结果，给后面的命令使用
   
    [root@oldboy1 data]# find /root/ -type f -name "*.txt" | xargs ls -l
    -rw-r--r--. 1 root root  0 Jul 13 05:10 /root/alex.txt
    -rw-r--r--. 1 root root  0 Jul 13 04:46 /root/data/oldgirl.txt
    -rw-r--r--. 1 root root  6 Jul 12 12:17 /root/hello2/hello.txt
    -rw-r--r--. 1 root root  6 Jul 12 11:59 /root/hello/hello.txt
    -rw-r--r--. 1 root root  0 Jul 13 05:10 /root/lidao.txt
    -rw-r--r--. 1 root root  0 Jul 13 05:10 /root/oldboy.txt
    -rw-r--r--. 1 root root 26 Jul 13 01:49 /root/rename_test/oldboy.txt

怎样防止误删除？
    删除前使用ls查看
    

关于Linux命令错误提示
    1) 能够知道错误的意思
    2) 知道错误为什么发生，并能解决错误
    
小手抖一抖，数据全没有。

(15:04 - 16:50)

4. 特殊符号

.   进入当前目录 (点的两个功能)
        移动文件到当前目录
        复制文件到当前目录
    
..          进入父级目录
../../      进入爷爷级目录

(16:50 - 17:10)

5. 三剑客

已知文件 test.txt 内容为：
test
liyao
oldboy
请给出输出 test.txt 文件内容时，不包含 oldboy 字符串的命令

grep (三剑客老三 擅长过滤)
    过滤 显示要或不要的内容
    grep "oldboy" /data/test.txt
    第1种解法:
        grep -v "oldboy" /data/test.txt
head 
    第2种解法:
        head -n2 /data/test.txt  (n可以去掉)
    显示文件的前几行，默认显示前10行
    
awk (三剑客老大)
    awk '/oldboy/' /data/test.txt
        [root@oldboy1 data]# awk '/oldboy/' /data/test.txt
        oldboy
    第3种解法:
    awk '!/oldboy/' /data/test.txt
        [root@oldboy1 data]# awk '!/oldboy/' /data/test.txt
        test
        liyao
        
sed (三剑客老二)
    第4种解法:
    sed '/oldboy/d'  /data/test.txt 
    [root@oldboy1 data]# sed '/oldboy/d' /data/test.txt
    test
    liyao

tail
    显示文件的最后几行内容，默认显示最后10行
    显示文件的最后一行
        tail -1 test.txt
    显示文件的倒数3行
        tail -3 test.txt
        
(17:10 - 18:00)

6. 简单命令

同时创建pax目录和paq目录
    mkdir -p  pax/paq
    
显示创建目录的详细信息
    [root@oldboy1 data]# mkdir -pv /data/a/b/c/d/e
    mkdir: created directory `/data/a'
    mkdir: created directory `/data/a/b'
    mkdir: created directory `/data/a/b/c'
    mkdir: created directory `/data/a/b/c/d'
    mkdir: created directory `/data/a/b/c/d/e'

(18:01 - 18:12)

7. 只查看ett.txt文件（共100行）内第20到第30 

seq - 可以生成序列

    [root@oldboy1 data]# seq 5
    1
    2
    3
    4
    5
    
    [root@oldboy1 data]# seq 40 > /data/ett.txt
    [root@oldboy1 data]# cat /data/ett.txt
    1
    2
    3
    4
    .
    .
    .
    40
    
    解决方案1 - head + tail 显示20到第30行:
    [root@oldboy1 data]# head -30 /data/ett.txt | tail -11
    20
    21
    .
    .
    .
    29
    30
    
    显示文件的30行-40行:
    [root@oldboy1 data]# tail -11 /data/ett.txt
    30
    31
    32
    .
    .
    .
    39
    40
    
sed 三剑客之二 擅长取行
    显示文件的第三行
    sed -n '3p' /data/ett.txt
    -n 是取消默认输出
    p是print
    
    解决方案2:  显示20-30行
    sed -n '20,30p' /data/ett.txt 
    [root@oldboy1 data]# sed -n '20,30p' /data/ett.txt
    20
    21
    22
    .
    .
    .
    30
  
awk 三剑客老大 擅长取列
    显示第3行
    awk 'NR==3' /data/ett.txt
    [root@oldboy1 data]# awk 'NR==3' /data/ett.txt
    3
    
    解决方案3 - 显示20-30行:
    awk 'NR==20,NR==30' /data/ett.txt
    [root@oldboy1 data]# awk 'NR==20, NR==30' /data/ett.txt
    20
    21
    .
    .
    .
    30

小结:
    1) head + tail
    2) sed
    3) awk
    
    一种方法做出来，不算方法。
    二种方法做出，左右为难，体验不好。
    三种以上方法，方为上策。


(18:12 - 18:55)

今天总结:
1) 简单的命令
2) find + | xargs
3) 三剑客 grep(过滤) sed(取行) awk(取列)

预习第6天:
1) sed的替换功能
2) 设置别名
3) Linux基础优化
    添加用户
    劫财劫色(iptables selinux)
    如何修改系统的字符集
    
(18:55 - 18:58)